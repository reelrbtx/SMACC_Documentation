<map id="franka_hw::FrankaModelHandle" name="franka_hw::FrankaModelHandle">
<area shape="rect" id="node2" href="$classfranka_1_1Model.html" title="{franka::Model\n||+ Model()\l+ Model()\l+ operator=()\l+ ~Model()\l+ pose()\l+ pose()\l+ bodyJacobian()\l+ bodyJacobian()\l+ zeroJacobian()\l+ zeroJacobian()\l+ mass()\l+ mass()\l+ coriolis()\l+ coriolis()\l+ gravity()\l+ gravity()\l}" alt="" coords="388,1503,523,1800"/>
<area shape="rect" id="node4" href="$structfranka_1_1RobotState.html" title="{franka::RobotState\n|+ dtau_J\l+ joint_contact\l+ joint_collision\l|}" alt="" coords="921,1598,1064,1705"/>
<area shape="rect" id="node5" href="$classfranka_1_1Duration.html" title="{franka::Duration\n||+ Duration()\l+ Duration()\l+ Duration()\l+ Duration()\l+ operator=()\l+ operator std::chrono\l::duration\&lt; uint64_t,\l std::milli \&gt;()\l+ toSec()\l+ toMSec()\l+ operator+()\l+ operator+=()\l+ operator&#45;()\l+ operator&#45;=()\l+ operator*()\l+ operator*=()\l+ operator/()\l+ operator/()\l+ operator/=()\l+ operator%()\l+ operator%()\l+ operator%=()\l+ operator%=()\l+ operator==()\l+ operator!=()\l+ operator\&lt;()\l+ operator\&lt;=()\l+ operator\&gt;()\l+ operator\&gt;=()\l* operator+()\l* operator+=()\l* operator&#45;()\l* operator&#45;=()\l* operator*()\l* operator*=()\l* operator/()\l* operator/()\l* operator/=()\l* operator%()\l* operator%()\l* operator%=()\l* operator%=()\l* operator==()\l* operator!=()\l* operator\&lt;()\l* operator\&lt;=()\l* operator\&gt;()\l* operator\&gt;=()\l}" alt="" coords="178,446,346,1213"/>
<area shape="rect" id="node8" href="$structfranka_1_1Errors.html" title="{franka::Errors\n|+ joint_position_limits\l_violation\l+ cartesian_position\l_limits_violation\l+ self_collision_avoidance\l_violation\l+ cartesian_velocity\l_violation\l+ force_control_safety\l_violation\l+ cartesian_reflex\l+ max_goal_pose_deviation\l_violation\l+ cartesian_velocity\l_profile_safety_violation\l+ joint_position_motion\l_generator_start_pose\l_invalid\l+ joint_motion_generator\l_position_limits_violation\l+ joint_motion_generator\l_velocity_limits_violation\l+ joint_motion_generator\l_velocity_discontinuity\l+ joint_motion_generator\l_acceleration_discontinuity\l+ cartesian_motion_generator\l_elbow_limit_violation\l+ cartesian_motion_generator\l_velocity_limits_violation\l+ cartesian_motion_generator\l_velocity_discontinuity\l+ cartesian_motion_generator\l_acceleration_discontinuity\l+ cartesian_motion_generator\l_elbow_sign_inconsistent\l+ cartesian_motion_generator\l_start_elbow_invalid\l+ cartesian_motion_generator\l_joint_velocity_limits_violation\l+ cartesian_motion_generator\l_joint_velocity_discontinuity\l+ cartesian_position\l_motion_generator_invalid_frame\l+ force_controller_desired\l_force_tolerance_violation\l+ controller_torque_discontinuity\l+ communication_constraints\l_violation\l+ power_limit_violation\l+ joint_p2p_insufficient\l_torque_for_planning\l|+ Errors()\l+ Errors()\l+ operator=()\l+ Errors()\l+ operator bool()\l+ operator std::string()\l}" alt="" coords="541,380,783,1279"/>
<area shape="rect" id="node10" href="$classbool.html" title="{bool\n||}" alt="" coords="695,13,746,90"/>
</map>
